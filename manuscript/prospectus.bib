
@inproceedings{willcock_trading_2017,
	title = {Trading utilization for circuitry: {Hardware}-software co-design for real-time software-based short-circuit protection},
	isbn = {978-1-5386-1898-1},
	doi = {10.1109/RTCSA.2017.8046332},
	abstract = {© 2017 IEEE. Short-circuit faults are a potential source of damage to circuitry in DC-powered systems. Industrial applications including power converters, inverters, and insulated-gate bipolar transistors (IGBTs) often rely on fault detection systems in the form of dedicated circuitry to prevent damage. To increase flexibility in short-circuit detection and decrease dedicated circuitry, a software-based approach is presented. This implementation requires minimal circuitry and allows for tradeoff between board space and processor utilization. The design relies on a single inductor and microprocessor running a real-time task for identifying current and monitoring circuitry for faults. Experiments demonstrate detection of both hard-switching faults (HSF) and fault under load (FUL) shorts. The depicted relationship between processor utilization and board space consumed by the circuitry is confirmed through experimentation and allows optimization of board space with respect to utilization and vice versa. As a result, the proposed software-based detection is implementable with the addition of a single component and protects against damage from both HSF and FUL shorts.},
	booktitle = {{RTCSA} 2017 - 23rd {IEEE} {International} {Conference} on {Embedded} and {Real}-{Time} {Computing} {Systems} and {Applications}},
	author = {Willcock, A. and Fisher, N.},
	year = {2017},
	keywords = {EDF, Fault under load, Hard-switching fault, Hardware-software co-design, Short-circuit protection, Software-based short detection},
	file = {Willcock, Fisher - 2017 - Trading utilization for circuitry Hardware-software co-design for real-time software-based short-circuit pr(2).pdf:/home/aaron/Zotero/storage/GBQ6ETX7/Willcock, Fisher - 2017 - Trading utilization for circuitry Hardware-software co-design for real-time software-based short-circuit pr(2).pdf:application/pdf}
}

@inproceedings{bijinemula_efficient_2019,
	title = {An {Efficient} {Knapsack}-{Based} {Approach} for {Calculating} the {Worst}-{Case} {Demand} of {AVR} {Tasks}},
	volume = {2018-Decem},
	isbn = {978-1-5386-7907-4},
	doi = {10.1109/RTSS.2018.00053},
	abstract = {© 2018 IEEE. Engine-triggered tasks are real-time tasks that are released when the crankshaft in an engine completes a rotation, which depends on the angular speed and acceleration of the crankshaft itself. In addition, the execution time of an engine-triggered task depends on the speed of the crankshaft. Tasks whose execution times depend on a variable period are referred to as adaptive-variable rate (AVR) tasks. Existing techniques to calculate the worst-case demand of AVR tasks are either inexact or computationally intractable. In this paper, we transform the problem of finding the worst-case demand of AVR tasks over a given time interval into a variant of the knapsack problem to efficiently find the exact solution. We then propose a framework to systematically reduce the search space associated with finding the worst-case demand of AVR tasks. Experimental results reveal that our approach is at least 10 times faster, with an average runtime improvement of 146 times, for randomly generated tasksets when compared to the state-of-the-art technique.},
	booktitle = {Proceedings - {Real}-{Time} {Systems} {Symposium}},
	author = {Bijinemula, Sandeep Kumar and Willcock, Aaron and Chantem, Thidapat and Fisher, Nathan},
	year = {2019},
	note = {ISSN: 10528725},
	keywords = {aa\_read, Acceleration, Adaptation models, Adaptive variable rate task, Adaptive variable rate task, demand bound function, worst-case demand, knapsack problem, adaptive-variable rate tasks, AVR tasks, Computational modeling, crankshaft, demand bound function, engine-triggered task, Engines, Fuels, knapsack problem, knapsack problems, knapsack-based approach, real-time systems, Real-time systems, real-time tasks, scheduling, shafts, Task analysis, worst-case demand},
	pages = {384--395},
	file = {IEEE Xplore Full Text PDF:/home/aaron/Zotero/storage/Z9RPJ758/Bijinemula et al. - 2018 - An Efficient Knapsack-Based Approach for Calculati.pdf:application/pdf;IEEE Xplore Abstract Record:/home/aaron/Zotero/storage/UXIPU537/Bijinemula et al. - 2018 - An Efficient Knapsack-Based Approach for Calculati.html:text/html}
}
